// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

namespace api.Migrations
{
    [DbContext(typeof(GBOHContext))]
    [Migration("20191206142737_CreateRecipeSteps")]
    partial class CreateRecipeSteps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api.Models.Cuisine", b =>
                {
                    b.Property<int>("CuisineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CuisineId");

                    b.ToTable("Cuisine");

                    b.HasData(
                        new
                        {
                            CuisineId = 1,
                            Name = "Asian"
                        },
                        new
                        {
                            CuisineId = 2,
                            Name = "Italian"
                        },
                        new
                        {
                            CuisineId = 3,
                            Name = "Indian"
                        });
                });

            modelBuilder.Entity("api.Models.Diet", b =>
                {
                    b.Property<int>("DietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DietId");

                    b.ToTable("Diet");

                    b.HasData(
                        new
                        {
                            DietId = 1,
                            Name = "Vegan"
                        },
                        new
                        {
                            DietId = 2,
                            Name = "Vegetarian"
                        },
                        new
                        {
                            DietId = 3,
                            Name = "Gluten-free"
                        });
                });

            modelBuilder.Entity("api.Models.DishType", b =>
                {
                    b.Property<int>("DishTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DishTypeId");

                    b.ToTable("DishType");

                    b.HasData(
                        new
                        {
                            DishTypeId = 1,
                            Name = "Breakfast"
                        },
                        new
                        {
                            DishTypeId = 2,
                            Name = "Dinner"
                        },
                        new
                        {
                            DishTypeId = 3,
                            Name = "Lunch"
                        },
                        new
                        {
                            DishTypeId = 4,
                            Name = "Dessert"
                        });
                });

            modelBuilder.Entity("api.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredient");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            ImageURL = "url",
                            Name = "Tomato",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 2,
                            ImageURL = "url",
                            Name = "Cucumber",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 3,
                            ImageURL = "url",
                            Name = "Pork",
                            Type = "Meat"
                        },
                        new
                        {
                            IngredientId = 4,
                            ImageURL = "url",
                            Name = "Potato",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 5,
                            ImageURL = "url",
                            Name = "Onion",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 6,
                            ImageURL = "url",
                            Name = "Asparagus",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 7,
                            ImageURL = "url",
                            Name = "Chilli peppers",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 8,
                            ImageURL = "url",
                            Name = "Lettuce",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 9,
                            ImageURL = "url",
                            Name = "Leeks",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 10,
                            ImageURL = "url",
                            Name = "Eggplant",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 11,
                            ImageURL = "url",
                            Name = "Mushrooms",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 12,
                            ImageURL = "url",
                            Name = "Peas",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 13,
                            ImageURL = "url",
                            Name = "Pumpkin",
                            Type = "Vegetable"
                        },
                        new
                        {
                            IngredientId = 14,
                            ImageURL = "url",
                            Name = "Beans",
                            Type = "Grain"
                        },
                        new
                        {
                            IngredientId = 15,
                            ImageURL = "url",
                            Name = "Lasagne",
                            Type = "Pasta"
                        },
                        new
                        {
                            IngredientId = 16,
                            ImageURL = "url",
                            Name = "Spahetti",
                            Type = "Pasta"
                        },
                        new
                        {
                            IngredientId = 17,
                            ImageURL = "url",
                            Name = "Macaroni",
                            Type = "Pasta"
                        },
                        new
                        {
                            IngredientId = 18,
                            ImageURL = "url",
                            Name = "Rigatoni",
                            Type = "Pasta"
                        });
                });

            modelBuilder.Entity("api.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ReviewsNumber")
                        .HasColumnType("int");

                    b.Property<double>("Stars")
                        .HasColumnType("float");

                    b.HasKey("RatingId");

                    b.ToTable("Rating");

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            ReviewsNumber = 232,
                            Stars = 5.0
                        },
                        new
                        {
                            RatingId = 2,
                            ReviewsNumber = 156,
                            Stars = 4.2999999999999998
                        },
                        new
                        {
                            RatingId = 3,
                            ReviewsNumber = 20,
                            Stars = 3.7999999999999998
                        });
                });

            modelBuilder.Entity("api.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CuisineId")
                        .HasColumnType("int");

                    b.Property<int>("DishTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.HasIndex("CuisineId");

                    b.HasIndex("DishTypeId");

                    b.HasIndex("RatingId");

                    b.ToTable("Recipe");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            CuisineId = 1,
                            DishTypeId = 1,
                            ImageURL = "https://via.placeholder.com/150",
                            Price = 70m,
                            RatingId = 1,
                            Time = 20,
                            Title = "Placeholder Dish"
                        },
                        new
                        {
                            RecipeId = 2,
                            CuisineId = 2,
                            DishTypeId = 2,
                            ImageURL = "https://via.placeholder.com/150",
                            Price = 80m,
                            RatingId = 3,
                            Time = 40,
                            Title = "Placeholder Dish"
                        },
                        new
                        {
                            RecipeId = 3,
                            CuisineId = 3,
                            DishTypeId = 3,
                            ImageURL = "https://via.placeholder.com/150",
                            Price = 65m,
                            RatingId = 1,
                            Time = 60,
                            Title = "Placeholder Dish"
                        },
                        new
                        {
                            RecipeId = 4,
                            CuisineId = 2,
                            DishTypeId = 2,
                            ImageURL = "https://via.placeholder.com/150",
                            Price = 95m,
                            RatingId = 1,
                            Time = 30,
                            Title = "Placeholder Dish"
                        },
                        new
                        {
                            RecipeId = 5,
                            CuisineId = 3,
                            DishTypeId = 2,
                            ImageURL = "https://via.placeholder.com/150",
                            Price = 75m,
                            RatingId = 2,
                            Time = 50,
                            Title = "Placeholder Dish"
                        });
                });

            modelBuilder.Entity("api.Models.RecipeDiet", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "DietId");

                    b.HasIndex("DietId");

                    b.ToTable("RecipeDiets");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            DietId = 1
                        },
                        new
                        {
                            RecipeId = 2,
                            DietId = 2
                        },
                        new
                        {
                            RecipeId = 3,
                            DietId = 3
                        },
                        new
                        {
                            RecipeId = 2,
                            DietId = 3
                        });
                });

            modelBuilder.Entity("api.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("api.Models.RecipeRecipeStep", b =>
                {
                    b.Property<int>("RecipeStepId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeStepId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeRecipeSteps");
                });

            modelBuilder.Entity("api.Models.RecipeStep", b =>
                {
                    b.Property<int>("RecipeStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecipeStepDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeStepId");

                    b.ToTable("RecipeStep");
                });

            modelBuilder.Entity("api.Models.Recipe", b =>
                {
                    b.HasOne("api.Models.Cuisine", null)
                        .WithMany("Recipes")
                        .HasForeignKey("CuisineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.DishType", null)
                        .WithMany("Recipes")
                        .HasForeignKey("DishTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Rating", null)
                        .WithMany("Recipes")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.RecipeDiet", b =>
                {
                    b.HasOne("api.Models.Diet", "Diet")
                        .WithMany("RecipeDiets")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Recipe", "Recipe")
                        .WithMany("RecipeDiets")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.RecipeIngredient", b =>
                {
                    b.HasOne("api.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.RecipeRecipeStep", b =>
                {
                    b.HasOne("api.Models.Recipe", "Recipe")
                        .WithMany("RecipeRecipeSteps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.RecipeStep", "RecipeStep")
                        .WithMany("RecipeRecipeSteps")
                        .HasForeignKey("RecipeStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
